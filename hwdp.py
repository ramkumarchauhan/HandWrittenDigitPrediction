# -*- coding: utf-8 -*-
"""HWDP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lnMKpDVEWmBTbHULj8LtgFmBYh9UBkiD
"""



"""# **Hand Written Digit Prediction - Classification Analysis**

The digits dataset consists of 8 x 8 px image of digits. the image attribute of the dataset stores 8 x 8 arrays of grayscale values for each image. We will use these arrays to visualize the first 4 images. the target attribute of the dataset store the digit each image represent.

# **Importing Library**
"""

import pandas as pd

import numpy as np

import matplotlib.pyplot as plt

"""# **Import Data**"""

from sklearn.datasets import load_digits

data = load_digits()

_, axes = plt.subplots(nrows=1,ncols=4,figsize=(10,3))
for ax , image, label in zip(axes,data.images, data.target):
  ax.set_axis_off()
  ax.imshow(image, cmap=plt.cm.gray_r, interpolation="nearest")
  ax.set_title("Training: %i" % label)

"""# **Preprocessing of Data**"""

data.images.shape

data.images[0]

data.images[0].shape

len(data.images)

no_samples = len(data.images)
Data = data.images.reshape(no_samples,-1)

Data[0]

Data[0].shape

Data.shape

"""# **Scaling image Data**"""

Data.min()

Data.max()

Data = Data/16

Data.min()

Data.max()

Data[0]

"""# **Train Test Split Data**"""

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(Data, data.target, test_size=0.3)

x_train.shape, x_test.shape, y_train.shape, y_test.shape

"""# **Random Forest Model**"""

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier()

rf.fit(x_train, y_train)
RandomForestClassifier()

"""# **Prediction of Test Data**"""

y_pred = rf.predict(x_test)

y_pred

"""## **Prediction**"""

from sklearn.metrics import confusion_matrix, classification_report

confusion_matrix(y_test, y_pred)

print(classification_report(y_test, y_pred))